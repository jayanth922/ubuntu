name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Install intent service dependencies
      working-directory: ./backend/intent_service
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run intent service tests
      working-directory: ./backend/intent_service
      run: |
        pip install pytest
        pytest
    
    - name: Install RAG service dependencies
      working-directory: ./backend/rag_service
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run RAG service tests
      working-directory: ./backend/rag_service
      run: |
        pip install pytest
        pytest
    
    - name: Install dialog manager dependencies
      working-directory: ./backend/dialog_manager
      run: npm ci
    
    - name: Run dialog manager tests
      working-directory: ./backend/dialog_manager
      run: npm test || true
    
    - name: Build and test with Docker Compose
      run: |
        docker-compose build
        docker-compose up -d
        sleep 30  # Give services time to start
        docker-compose ps
        curl -s http://localhost:8000/health | grep "healthy"
        docker-compose down